{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/footer/footer.component.html","./src/app/footer/footer.component.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/pages/bots/bots-detail/bots-detail.component.html","./src/app/pages/bots/bots-detail/bots-detail.component.ts","./src/app/pages/bots/bots.component.html","./src/app/pages/bots/bots.component.ts","./src/app/pages/bots/new-bot/new-bot.component.html","./src/app/pages/bots/new-bot/new-bot.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/keys/keys-detail/keys-detail.component.html","./src/app/pages/keys/keys-detail/keys-detail.component.ts","./src/app/pages/keys/keys.component.html","./src/app/pages/keys/keys.component.ts","./src/app/pages/keys/new-key/new-key.component.html","./src/app/pages/keys/new-key/new-key.component.ts","./src/app/services/bots.service.ts","./src/app/services/keys.service.ts","./src/app/sidenav/sidenav.component.html","./src/app/sidenav/sidenav.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {DashboardComponent} from './pages/dashboard/dashboard.component';\r\nimport {BotsComponent} from './pages/bots/bots.component';\r\nimport {BotsDetailComponent} from './pages/bots/bots-detail/bots-detail.component';\r\nimport {KeysComponent} from './pages/keys/keys.component';\r\nimport {KeysDetailComponent} from './pages/keys/keys-detail/keys-detail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: 'bots',\r\n    component: BotsComponent\r\n  },\r\n  {\r\n    path: 'bots/:id',\r\n    component: BotsDetailComponent\r\n  },\r\n  {\r\n    path: 'keys',\r\n    component: KeysComponent\r\n  },\r\n  {\r\n    path: 'keys/:id',\r\n    component: KeysDetailComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","\r\n  <div class=\"layout\">\r\n    <app-sidenav class=\"nav\">Nav</app-sidenav>\r\n    <div class=\"main\">\r\n      <app-header class=\"header\">header</app-header>\r\n      <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <app-footer class=\"footer\">footer</app-footer>\r\n    </div>\r\n  </div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'coss-grid';\r\n\r\n  sideNavOpen: boolean;\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {SidenavComponent} from './sidenav/sidenav.component';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule, MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule, MatProgressSpinnerModule, MatSelectModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule\r\n} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {DashboardComponent} from './pages/dashboard/dashboard.component';\r\nimport {BotsComponent} from './pages/bots/bots.component';\r\nimport {NewBotComponent} from './pages/bots/new-bot/new-bot.component';\r\nimport {DeleteBotComponent} from './pages/bots/delete-bot/delete-bot.component';\r\nimport {BotsDetailComponent} from './pages/bots/bots-detail/bots-detail.component';\r\nimport { KeysComponent } from './pages/keys/keys.component';\r\nimport { KeysDetailComponent } from './pages/keys/keys-detail/keys-detail.component';\r\nimport { NewKeyComponent } from './pages/keys/new-key/new-key.component';\r\nimport {NgApexchartsModule} from 'ng-apexcharts';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidenavComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    DashboardComponent,\r\n    BotsComponent,\r\n    NewBotComponent,\r\n    DeleteBotComponent,\r\n    BotsDetailComponent,\r\n    KeysComponent,\r\n    KeysDetailComponent,\r\n    NewKeyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatGridListModule,\r\n    NgApexchartsModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    NewBotComponent,\r\n    NewKeyComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","<mat-toolbar>Footer</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>Header</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card>\r\n  <mat-card-title>Details</mat-card-title>\r\n  <p>Name: {{ bot?.name }} </p>\r\n  <p>Type: {{ bot?.type }} </p>\r\n  <p>Status: {{ bot?.status }} </p>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-title>Action</mat-card-title>\r\n\r\n  <button mat-raised-button color=\"primary\" [disabled]=\"bot?.status === 'Running'\" (click)=\"startBot()\">Start</button>\r\n  <button mat-raised-button color=\"primary\" [disabled]=\"bot?.status !== 'Running'\" (click)=\"stopBot()\">Cancel Orders and\r\n    Stop\r\n  </button>\r\n  <button mat-raised-button color=\"primary\" [disabled]=\"bot?.status === 'Running'\" (click)=\"removeBot()\">Delete</button>\r\n\r\n</mat-card>\r\n\r\n<ng-container *ngIf=\"bot?.type === 'GRID'\">\r\n  <mat-card>\r\n    <mat-card-title>Configuration</mat-card-title>\r\n\r\n    <div class=\"flex-container\">\r\n      <form class=\"example-form\" [formGroup]=\"form\" >\r\n        <div *ngIf=\"bot?.status === 'Running'\" style=\"padding-bottom: 4px;\">\r\n          Bot has to be stopped to change the settings.\r\n        </div>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Pair</mat-label>\r\n          <mat-select formControlName=\"pair\" [value]=\"form.get('pair').value\">\r\n            <mat-option *ngFor=\"let symbol of symbols\" [value]=\"symbol\">\r\n              {{symbol}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Upper Wall\" value=\"\" formControlName=\"upperWall\"\r\n                 [value]=\"form.get('upperWall').value\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Lower Wall\" value=\"\" formControlName=\"lowerWall\"\r\n                 [value]=\"form.get('lowerWall').value\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Number of Grids\" value=\"\" formControlName=\"numberOfGrids\"\r\n                 [value]=\"form.get('numberOfGrids').value\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Amount per Grid\" value=\"\" formControlName=\"amountPerGrid\"\r\n                 [value]=\"form.get('amountPerGrid').value\">\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\"\r\n                [disabled]=\"bot?.status === 'Running' || !form.value.pair || !form.value.upperWall || !form.value.lowerWall || !form.value.numberOfGrids || !form.value.amountPerGrid\"\r\n                (click)=\"saveConfig()\">Save\r\n        </button>\r\n      </form>\r\n\r\n      <mat-spinner *ngIf=\"currentPair && !showChart\" ></mat-spinner>\r\n      <apx-chart  *ngIf=\"showChart\" [tooltip]=\"tooltip\" [series]=\"series\" [chart]=\"chart\" [title]=\"title\"\r\n                 [xaxis]=\"xAxis\" [yaxis]=\"yAxis\" [stroke]=\"stroke\" [colors]=\"colors\" [grid]=\"grid\"\r\n                 [legend]=\"legend\"></apx-chart>\r\n    </div>\r\n\r\n    <div class=\"flex-container\">\r\n      <div >\r\n        <mat-list role=\"list\">\r\n          <mat-list-item role=\"listitem\" *ngFor=\"let grid of getBuyOrders()\">{{ grid }}</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n\r\n      <div >\r\n        <mat-list role=\"list\">\r\n          <mat-list-item role=\"listitem\" *ngFor=\"let grid of getSellOrders()\">{{ grid }}</mat-list-item>\r\n        </mat-list>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </mat-card>\r\n\r\n</ng-container>\r\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {Bot, BotsService} from '../../../services/bots.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexGrid,\r\n  ApexLegend,\r\n  ApexStroke,\r\n  ApexTitleSubtitle,\r\n  ApexTooltip,\r\n  ApexXAxis,\r\n  ApexYAxis\r\n} from 'ng-apexcharts';\r\nimport {take} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-bots-detail',\r\n  templateUrl: './bots-detail.component.html',\r\n  styleUrls: ['./bots-detail.component.scss']\r\n})\r\nexport class BotsDetailComponent implements OnInit {\r\n\r\n  bot: Bot;\r\n  private routeSub: Subscription;\r\n  form: FormGroup;\r\n  currentPair: string;\r\n  pairSeries: ApexAxisChartSeries;\r\n\r\n  tooltip: ApexTooltip = {\r\n    enabled: false,\r\n  };\r\n  series: ApexAxisChartSeries;\r\n  seriesCopy: ApexAxisChartSeries;\r\n  chart: ApexChart = {\r\n    height: 400,\r\n    type: 'line',\r\n    animations: {\r\n      enabled: false\r\n    },\r\n    events: {\r\n      zoomed: (chartContext, {xaxis, yaxis}) => {\r\n        // TODO: Remove not visible grids so zoom can adjust y-axis\r\n        // const seriesCopy = this.seriesCopy;\r\n        // const newSeries: ApexAxisChartSeries = [];\r\n        //\r\n        // let min;\r\n        // let max;\r\n\r\n        // seriesCopy.forEach((serie, index) => {\r\n        //   if (index === 0) {\r\n        //     newSeries.push(serie);\r\n        //   } else {\r\n        //     // @ts-ignore\r\n        //     console.log((new Date(serie.data[0].x)).getTime());\r\n        //     // @ts-ignore\r\n        //     if (xaxis.min <= (new Date(serie.data[0].x)).getTime() <= xaxis.max) {\r\n        //       newSeries.push(serie);\r\n        //     }\r\n        //   }\r\n        // });\r\n\r\n        // this.series = newSeries;\r\n      }\r\n    }\r\n  };\r\n  xAxis: ApexXAxis = {\r\n    type: 'datetime',\r\n    labels: {\r\n      style: {\r\n        // @ts-ignore\r\n        colors: 'white'\r\n      }\r\n    },\r\n    tooltip: {\r\n      enabled: false\r\n    }\r\n  };\r\n\r\n  yAxis: ApexYAxis = {\r\n    labels: {\r\n      style: {\r\n        color: 'white'\r\n      }\r\n    },\r\n    tooltip: {\r\n      enabled: false\r\n    }\r\n  };\r\n  stroke: ApexStroke = {\r\n    width: 1\r\n  };\r\n\r\n  colors: string[];\r\n  grid: ApexGrid = {\r\n    yaxis: {\r\n      lines: {\r\n        show: false\r\n      }\r\n    },\r\n  };\r\n\r\n  legend: ApexLegend = {\r\n    show: false,\r\n  };\r\n\r\n  title: ApexTitleSubtitle = {\r\n    text: 'CandleStick Chart',\r\n    align: 'left',\r\n    style: {\r\n      color: 'white'\r\n    }\r\n  };\r\n  showChart = false;\r\n\r\n  symbols: Array<string> = [];\r\n  current: number;\r\n  dateTimes: Array<number>;\r\n  grids: any[] = [];\r\n\r\n  exchangeInfo: {\r\n    symbols: [{\r\n      symbol: string;\r\n      amount_limit_decimal: string;\r\n      price_limit_decimal: string;\r\n      allow_trading: boolean;\r\n    }]\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public botsService: BotsService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef,\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.http.get('http://localhost:3000/api/trade/exchange-info')\r\n      .pipe(take(1))\r\n      .subscribe((exchangeInfo: any) => {\r\n        this.exchangeInfo = exchangeInfo;\r\n        this.exchangeInfo.symbols.forEach(symbol => {\r\n          this.symbols.push(symbol.symbol);\r\n        });\r\n\r\n        this.symbols.sort((a: string, b: string) => {\r\n          return a.split('_')[0] < b.split('_')[0] ? -1 : 1;\r\n        });\r\n\r\n        this.symbols.sort((a: string, b: string) => {\r\n          return a.split('_')[1] < b.split('_')[1] ? -1 : 1;\r\n        });\r\n      });\r\n\r\n    this.routeSub = this.route.params.subscribe(params => {\r\n      this.bot = this.botsService.getBot(params['id']);\r\n      if (this.bot) {\r\n        if (this.bot.status === 'Running') {\r\n          this.form.disable();\r\n        }\r\n        if (this.bot.config) {\r\n          this.form = new FormGroup({\r\n            pair: new FormControl(this.bot.config.pair),\r\n            upperWall: new FormControl(this.bot.config.upperWall),\r\n            lowerWall: new FormControl(this.bot.config.lowerWall),\r\n            numberOfGrids: new FormControl(this.bot.config.numberOfGrids),\r\n            amountPerGrid: new FormControl(this.bot.config.amountPerGrid),\r\n          });\r\n          this.initChart(this.form.value);\r\n        } else {\r\n          this.form = new FormGroup({\r\n            pair: new FormControl(),\r\n            upperWall: new FormControl(),\r\n            lowerWall: new FormControl(),\r\n            numberOfGrids: new FormControl(),\r\n            amountPerGrid: new FormControl(),\r\n          });\r\n        }\r\n        this.form.valueChanges.subscribe(form => {\r\n          this.initChart(form);\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  startBot() {\r\n    this.botsService.startBot(this.bot.id);\r\n    this.bot = this.botsService.getBot(this.bot.id);\r\n    this.form.disable();\r\n  }\r\n\r\n  stopBot() {\r\n    this.botsService.stopBot(this.bot.id);\r\n    this.bot = this.botsService.getBot(this.bot.id);\r\n    this.form.enable();\r\n  }\r\n\r\n  removeBot() {\r\n    this.botsService.removeBot(this.bot.id);\r\n    this.bot = this.botsService.getBot(this.bot.id);\r\n    this.router.navigate(['/bots']);\r\n  }\r\n\r\n  saveConfig() {\r\n    this.botsService.saveConfig(this.bot.id, this.form.value);\r\n    this.bot = this.botsService.getBot(this.bot.id);\r\n    this.fillForm(this.bot.config);\r\n  }\r\n\r\n  fillForm(config: any) {\r\n    this.form.setValue({\r\n      pair: config.pair,\r\n      upperWall: config.upperWall,\r\n      lowerWall: config.lowerWall,\r\n      numberOfGrids: config.numberOfGrids,\r\n      amountPerGrid: config.amountPerGrid,\r\n    });\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  initChart(form: {pair, upperWall, lowerWall, numberOfGrids}) {\r\n    if (form.pair) {\r\n      if (this.currentPair !== form.pair) {\r\n        this.currentPair = form.pair;\r\n        this.showChart = false;\r\n        this.http.get('http://localhost:3000/api/engine/cs?symbol=' + form.pair + '&tt=12h')\r\n          .pipe(take(1))\r\n          .subscribe((cs: { series: Array<any> }) => {\r\n            const data = [];\r\n            this.dateTimes = [];\r\n\r\n            cs.series.forEach(entry => {\r\n              const dataEntry = {\r\n                x: new Date(entry[0]),\r\n                y: [\r\n                  parseFloat(entry[1]),\r\n                  parseFloat(entry[2]),\r\n                  parseFloat(entry[3]),\r\n                  parseFloat(entry[4]),\r\n                ]\r\n              };\r\n              data.push(dataEntry);\r\n              this.dateTimes.push(entry[0]);\r\n            });\r\n\r\n            this.series = [{\r\n              name: '2h',\r\n              // @ts-ignore\r\n              type: 'candlestick',\r\n              data\r\n            }];\r\n            this.pairSeries = this.series;\r\n            this.seriesCopy = this.series;\r\n\r\n            this.current = parseFloat(cs.series[cs.series.length - 1][4]);\r\n            this.buildGrids(form, this.current, this.dateTimes);\r\n          });\r\n      } else {\r\n        this.buildGrids(form, this.current, this.dateTimes);\r\n      }\r\n\r\n    } else {\r\n      this.showChart = false;\r\n    }\r\n  }\r\n\r\n  buildGrids(form: {pair, upperWall, lowerWall, numberOfGrids}, current: number, dateTimes: Array<number>) {\r\n    if (form.upperWall && form.lowerWall && form.numberOfGrids) {\r\n\r\n      const series = this.pairSeries;\r\n      // Grids\r\n      this.grids = [];\r\n\r\n      const upper = form.upperWall;\r\n      const lower = form.lowerWall;\r\n      const gridAmount = form.numberOfGrids;\r\n      const margin = (upper - lower) / gridAmount;\r\n\r\n      for (let i = 0; i < gridAmount; i++) {\r\n        this.grids.push(upper - (i * margin));\r\n      }\r\n      this.colors = ['black'];\r\n\r\n      this.grids.forEach((grid, index) => {\r\n        const array = [];\r\n        dateTimes.forEach(dateTime => {\r\n          array.push({\r\n            x: new Date(dateTime),\r\n            y: grid\r\n          });\r\n        });\r\n        series.push({\r\n          name: 'grid #' + (index + 1),\r\n          // @ts-ignore\r\n          type: 'line',\r\n          data: array\r\n        });\r\n        if (grid > current) {\r\n          this.colors.push('white');\r\n        } else {\r\n          this.colors.push('white');\r\n        }\r\n      });\r\n\r\n      this.series = this.series.concat(series);\r\n    }\r\n    this.showChart = true;\r\n  }\r\n\r\n  getBuyOrders(): Array<number> {\r\n    return this.grids.filter(grid => {\r\n      return grid < this.current;\r\n    });\r\n  }\r\n\r\n  getSellOrders(): Array<number> {\r\n    return this.grids.filter(grid => {\r\n      return grid > this.current;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"flex-container\">\r\n  <mat-card *ngFor=\"let bot of botsService.getBots()\" [routerLink]=\"'/bots/' + bot.id\">\r\n    <p>Name: {{ bot?.name }} </p>\r\n    <p>Type: {{ bot?.type }} </p>\r\n    <p>Status: {{ bot?.status }} </p>\r\n  </mat-card>\r\n\r\n  <mat-card (click)=\"createBot()\">\r\n    Add Bot\r\n  </mat-card>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {BotsService, BotTypes} from '../../services/bots.service';\r\nimport {MatDialog} from '@angular/material';\r\nimport {NewBotComponent} from './new-bot/new-bot.component';\r\n\r\n@Component({\r\n  selector: 'app-bots',\r\n  templateUrl: './bots.component.html',\r\n  styleUrls: ['./bots.component.scss']\r\n})\r\nexport class BotsComponent implements OnInit {\r\n\r\n  constructor(public botsService: BotsService, private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createBot() {\r\n    this.dialog.open(NewBotComponent, {disableClose: true}).afterClosed().subscribe(bot => {\r\n      if (bot) {\r\n        this.botsService.addBot(bot);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<form class=\"example-form\" [formGroup]=\"form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Name\" value=\"\" formControlName=\"name\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>Type</mat-label>\r\n    <mat-select formControlName=\"type\">\r\n      <mat-option [value]=\"'GRID'\">\r\n        Grid Trading\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button mat-raised-button color=\"primary\" [disabled]=\"form.value.name === null || form.value.type === null\" (click)=\"dialogRef.close(form.value)\">Create</button>\r\n  <button mat-button (click)=\"dialogRef.close(null)\">Abort</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-new-bot',\r\n  templateUrl: './new-bot.component.html',\r\n  styleUrls: ['./new-bot.component.scss']\r\n})\r\nexport class NewBotComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<NewBotComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(),\r\n      type: new FormControl(),\r\n    });\r\n  }\r\n\r\n}\r\n","<p>Please setup atleast one Api key on the left and then create a bot</p>\n<br>\n<br>\n<p>WIP (comes after promo and if there is demand)</p>\n<br>\n<p>Features to come:</p>\n<p>Display of sell/buy orders per pair and visualize where the price is</p>\n<p>Total profit</p>\n<p>Unrealized profit</p>\n<p>Integration of my other bots</p>\n<p>Telegram integration</p>\n<p>Logs</p>\n<p>WAY BETTER design</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card>\r\n  <mat-card-title>Details</mat-card-title>\r\n  <p>Name: {{ key?.name }} </p>\r\n  <p>Name: {{ key?.public }} </p>\r\n  <p>Name: {{ key?.secret }} </p>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Key, KeysService} from '../../../services/keys.service';\r\n\r\n@Component({\r\n  selector: 'app-keys-detail',\r\n  templateUrl: './keys-detail.component.html',\r\n  styleUrls: ['./keys-detail.component.scss']\r\n})\r\nexport class KeysDetailComponent implements OnInit {\r\n\r\n  key: Key;\r\n  private routeSub: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute, public keysService: KeysService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.routeSub = this.route.params.subscribe(params => {\r\n      this.key = this.keysService.getKey(params['id']);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"flex-container\">\r\n  <mat-card *ngFor=\"let key of keysService.getKeys()\" [routerLink]=\"'/keys/' + key.id\">\r\n    <p>Name: {{ key?.name }} </p>\r\n    <p>Public Key: {{ key?.public }} </p>\r\n    <p>Secret: {{ key?.secret }} </p>\r\n  </mat-card>\r\n\r\n  <mat-card (click)=\"createKey()\">\r\n    Add Key\r\n  </mat-card>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Key, KeysService} from '../../services/keys.service';\r\nimport {NewBotComponent} from '../bots/new-bot/new-bot.component';\r\nimport {MatDialog} from '@angular/material';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport {NewKeyComponent} from './new-key/new-key.component';\r\n\r\n@Component({\r\n  selector: 'app-keys',\r\n  templateUrl: './keys.component.html',\r\n  styleUrls: ['./keys.component.scss']\r\n})\r\nexport class KeysComponent implements OnInit {\r\n\r\n  constructor(public keysService: KeysService, private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createKey() {\r\n    this.dialog.open(NewKeyComponent, {disableClose: true}).afterClosed().subscribe(data => {\r\n      if (data) {\r\n        const key: Key = {\r\n          name: data.name,\r\n          public: this.encryptData(data.public, data.password),\r\n          secret: this.encryptData(data.secret, data.password),\r\n        };\r\n        this.keysService.addKey(key);\r\n      }\r\n    });\r\n  }\r\n\r\n  encryptData(str: string, password: string) {\r\n    try {\r\n      return CryptoJS.AES.encrypt(str, password).toString();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  decryptData(str: string, password: string) {\r\n    try {\r\n      return CryptoJS.AES.decrypt(str, password);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","<form class=\"example-form\" [formGroup]=\"form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Name\" value=\"\" formControlName=\"name\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Public Key\" value=\"\" formControlName=\"public\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Private Key\" value=\"\" formControlName=\"secret\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"example-full-width\">\r\n    <input matInput placeholder=\"Encrypt with Password\" value=\"\" formControlName=\"password\">\r\n  </mat-form-field>\r\n\r\n  <button mat-raised-button color=\"primary\" [disabled]=\"form.value.name === null || form.value.type === null || form.value.pair === null\" (click)=\"dialogRef.close(form.value)\">Create</button>\r\n  <button mat-button (click)=\"dialogRef.close(null)\">Abort</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {MatDialogRef} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-new-key',\r\n  templateUrl: './new-key.component.html',\r\n  styleUrls: ['./new-key.component.scss']\r\n})\r\nexport class NewKeyComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(public dialogRef: MatDialogRef<NewKeyComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(),\r\n      public: new FormControl(),\r\n      secret: new FormControl(),\r\n      password: new FormControl(),\r\n    });\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport * as uuid from 'uuid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BotsService {\r\n\r\n  private bots: Array<Bot> = [];\r\n\r\n  constructor() {\r\n    this.addBot({\r\n      name: 'test1',\r\n      type: BotTypes.GRID,\r\n    });\r\n\r\n    this.addBot({\r\n      name: 'test2',\r\n      type: BotTypes.GRID,\r\n    });\r\n\r\n    this.addBot({\r\n      name: 'test3',\r\n      type: BotTypes.GRID,\r\n    });\r\n  }\r\n\r\n  addBot(bot: Bot): Bot {\r\n    bot.id = uuid.v4();\r\n    bot.status = BotStatus.Init;\r\n    this.bots.push(bot);\r\n    return bot;\r\n  }\r\n\r\n  getBot(id: string): Bot {\r\n    return this.bots.find(bot => bot.id === id);\r\n  }\r\n\r\n  getBots(): Array<Bot> {\r\n    return this.bots;\r\n  }\r\n\r\n  removeBot(id: string): boolean {\r\n    const index = this.bots.findIndex(bot => bot.id === id);\r\n    if (index > -1) {\r\n      this.bots.splice(index, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  startBot(id: string): boolean {\r\n    const botToStart = this.bots.find(bot => bot.id === id);\r\n    if (botToStart) {\r\n      botToStart.status = BotStatus.Running;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  stopBot(id: string): boolean {\r\n    const botToStop = this.bots.find(bot => bot.id === id);\r\n    if (botToStop) {\r\n      botToStop.status = BotStatus.Stopped;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  saveConfig(id: string, config: any): boolean {\r\n    const botToSaveTo = this.bots.find(bot => bot.id === id);\r\n    if (botToSaveTo) {\r\n      botToSaveTo.config = config;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport interface Bot {\r\n  id?: string;\r\n  name: string;\r\n  type: BotTypes;\r\n  status?: BotStatus;\r\n  orders?: Array<string>;\r\n  config?: any;\r\n}\r\n\r\nexport enum BotTypes {\r\n  'GRID' = 'GRID',\r\n}\r\n\r\nexport enum BotStatus {\r\n  'Init' = 'Init',\r\n  'Running' = 'Running',\r\n  'Stopped' = 'Stopped',\r\n  'Crashed' = 'Crashed',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as uuid from 'uuid';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeysService {\r\n\r\n  private keys: Array<Key> = [];\r\n\r\n  constructor() {\r\n    this.addKey({\r\n      name: 'test1',\r\n      public: 'public',\r\n      secret: 'secret',\r\n    });\r\n\r\n    this.addKey({\r\n      name: 'test1',\r\n      public: 'public',\r\n      secret: 'secret',\r\n    });\r\n\r\n    this.addKey({\r\n      name: 'test1',\r\n      public: 'public',\r\n      secret: 'secret',\r\n    });\r\n  }\r\n\r\n  addKey(key: Key): Key {\r\n    key.id = uuid.v4();\r\n    this.keys.push(key);\r\n    return key;\r\n  }\r\n\r\n  getKey(id: string): Key {\r\n    return this.keys.find(key => key.id === id);\r\n  }\r\n\r\n  getKeys(): Array<Key> {\r\n    return this.keys;\r\n  }\r\n\r\n  removeKey(id: string): boolean {\r\n    const index = this.keys.findIndex(key => key.id === id);\r\n    if (index > -1) {\r\n      this.keys.splice(index, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport interface Key {\r\n  id?: string;\r\n  name: string;\r\n  public: string;\r\n  secret: string;\r\n}\r\n","<mat-list>\r\n  <mat-list-item [routerLink]=\"route.path\" routerLinkActive=\"active\" *ngFor=\"let route of routes\">\r\n    <mat-icon matListIcon>{{ route.icon }}</mat-icon>\r\n    <h3 matLine> {{route.title}} </h3>\r\n  </mat-list-item>\r\n</mat-list>\r\n","import {AfterViewInit, Component, EventEmitter, Output, ViewChild} from '@angular/core';\r\nimport {MatSidenav} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent {\r\n\r\n  routes = [\r\n    {\r\n      title: 'Dashboard',\r\n      icon: 'dashboard',\r\n      path: '',\r\n    },\r\n    {\r\n      title: 'Bots',\r\n      icon: 'view_list',\r\n      path: 'bots',\r\n    },\r\n    {\r\n      title: 'Keys',\r\n      icon: 'view_list',\r\n      path: 'keys',\r\n    }\r\n  ];\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}